<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutBoxTitle" xml:space="preserve">
    <value>About {0}</value>
  </data>
  <data name="AboutBoxVersion" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="BranchCreated" xml:space="preserve">
    <value>Branch {0} created at {1}.</value>
  </data>
  <data name="CheckingOut" xml:space="preserve">
    <value>Checking out {0} to {1}...</value>
  </data>
  <data name="ConfirmationCaption" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="ConfirmInstall" xml:space="preserve">
    <value>Are you sure you want to install product {0} ?</value>
  </data>
  <data name="ConfirmUninstall" xml:space="preserve">
    <value>Are you sure you want to uninstall product {0} ?</value>
  </data>
  <data name="DependentProjects" xml:space="preserve">
    <value>Show projects that depend on :</value>
  </data>
  <data name="DisplayExecutionInfo" xml:space="preserve">
    <value>[ExecutionInfo] Machine : {0} - Username : {1}\{2} - Time : {3:yyyy-MM-dd HH:mm}</value>
  </data>
  <data name="DisplayOnlyErrorWritingEventLog" xml:space="preserve">
    <value>Error writing log to eventlog : {0}</value>
  </data>
  <data name="DisplayOnlyErrorWritingLog" xml:space="preserve">
    <value>Error writing log to {0} : {1}</value>
  </data>
  <data name="EnvironmentAsk" xml:space="preserve">
    <value>Environment</value>
  </data>
  <data name="EnvironmentName" xml:space="preserve">
    <value>Name :</value>
  </data>
  <data name="EnvironmnentDirNotFound" xml:space="preserve">
    <value>Environment directory {0} not found.</value>
  </data>
  <data name="EnvironmnentFileExists" xml:space="preserve">
    <value>Environmnent file "{0}" already exists.</value>
  </data>
  <data name="ErrorCaption" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorCheckOutDirectoryExists" xml:space="preserve">
    <value>Error trying to checkout in path {0} : the directory already exists.</value>
  </data>
  <data name="ErrorLoadingProjectFile" xml:space="preserve">
    <value>Error loading project file {0} : {1}.</value>
  </data>
  <data name="ExecutionError" xml:space="preserve">
    <value>Fatal error : {0}.</value>
  </data>
  <data name="ExtractingPackage" xml:space="preserve">
    <value>Extracting package {0} into {1}...</value>
  </data>
  <data name="FolderName" xml:space="preserve">
    <value>Name :</value>
  </data>
  <data name="HasPendingModifications" xml:space="preserve">
    <value>The path {0} has pending modifications. Operation aborted.</value>
  </data>
  <data name="HelpNotAvalaible" xml:space="preserve">
    <value>Help not avalaible.</value>
  </data>
  <data name="HelpUnavailable" xml:space="preserve">
    <value>Help unavailable for task {0}.</value>
  </data>
  <data name="InitUICommand" xml:space="preserve">
    <value>Executing {0} command...</value>
  </data>
  <data name="LinkAnalysisConfirm" xml:space="preserve">
    <value>This command will try to analyse a whole svn tree to find depend projects.
This may take a while, so you should try to narrow as much as you can the search start tree.
Do you wish to continue ?</value>
  </data>
  <data name="LoadingDeployFile" xml:space="preserve">
    <value>Loading deploy file {0}...</value>
  </data>
  <data name="LocalFolderNotUnderSourceControl" xml:space="preserve">
    <value>Local folder is not under SVN source control. Operation aborted.</value>
  </data>
  <data name="MainFormTitle" xml:space="preserve">
    <value>NAntConsole - {0}</value>
  </data>
  <data name="MissingBranchProperties" xml:space="preserve">
    <value>It seems that NAntConsole is missing some information to operate on this svn folder. This svn folder might not have been created from NAntConsole.
This operation cannot continue.</value>
  </data>
  <data name="NewBranch" xml:space="preserve">
    <value>New branch</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>New folder</value>
  </data>
  <data name="NewUpdateCaption" xml:space="preserve">
    <value>New update found</value>
  </data>
  <data name="NewUpdateFound" xml:space="preserve">
    <value>A new version of NAntConsole ({0}) has been found in the repository "{1}". Do you want to update now ?
All running instances of NAntConsole will be shut down.</value>
  </data>
  <data name="NewUpdateNotFound" xml:space="preserve">
    <value>No update was found.</value>
  </data>
  <data name="OpenContainingFolder" xml:space="preserve">
    <value>Open parent folder...</value>
  </data>
  <data name="OpenInVS" xml:space="preserve">
    <value>Open file in Visual Studio...</value>
  </data>
  <data name="OpenInVSError" xml:space="preserve">
    <value>There has been an error trying to open Visual Studio.</value>
  </data>
  <data name="ProjectDependencies" xml:space="preserve">
    <value>Show dependencies of :</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ReleaseNotesNotAvalaible" xml:space="preserve">
    <value>Release notes not avalaible.</value>
  </data>
  <data name="ResolveConflicts" xml:space="preserve">
    <value>There are pending conflicts. Please resolve them manually.</value>
  </data>
  <data name="Scanning" xml:space="preserve">
    <value>Scanning {0}...</value>
  </data>
  <data name="SvnCreateDirectoryLogMessage" xml:space="preserve">
    <value>[NAntConsole] - directory {0} remotely created.</value>
  </data>
  <data name="SvnExplorerLoaded" xml:space="preserve">
    <value>{0} loaded.</value>
  </data>
  <data name="SvnExplorerLoading" xml:space="preserve">
    <value>Loading {0}...</value>
  </data>
  <data name="SvnLogCommitAfterMerge" xml:space="preserve">
    <value>Merged from {0} at {1}.</value>
  </data>
  <data name="SvnLogCreatingBranch" xml:space="preserve">
    <value>[NAntConsole] Branch {0} remotely created.</value>
  </data>
  <data name="SvnLogSetProperty" xml:space="preserve">
    <value>[NAntConsole] Setting property {0} = {1}.</value>
  </data>
  <data name="ToolStripLabelLocationOpenProjectFile" xml:space="preserve">
    <value>&lt;Open a project file&gt;</value>
  </data>
  <data name="ToolStripStatusLabel" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="ToolStripStatusLabelExecutingTarget" xml:space="preserve">
    <value>Executing {0}...</value>
  </data>
  <data name="ToolStripStatusLabelExecutionKo" xml:space="preserve">
    <value>{0} executed with errors.</value>
  </data>
  <data name="ToolStripStatusLabelExecutionOk" xml:space="preserve">
    <value>{0} executed successfully.</value>
  </data>
  <data name="UpdateAvalaibleToolTip" xml:space="preserve">
    <value>New updates are avalaible...</value>
  </data>
  <data name="UpdateCaption" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateToolTip" xml:space="preserve">
    <value>Update...</value>
  </data>
  <data name="Updating" xml:space="preserve">
    <value>Updating {0}...</value>
  </data>
  <data name="VersionError" xml:space="preserve">
    <value>Your NAntConsole version ({0}) was created before this package ({1}). Please upgrade your copy of NAntConsole.</value>
  </data>
</root>